{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundary.js","containers/App.js","actions.js","constants.js","reducers.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","src","concat","alt","CardList","robots","cardComponent","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","children","Component","App","onRequestRobots","_this$props","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","components_SearchBox","components_ErrorBoundary","components_CardList","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","initialStateSearch","initialStateRobots","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","logger","createLogger","rootReducer","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","src_containers_App"],"mappings":"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","file":"static/js/main.00eab4dd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) => {\n    return (\n        <div className=\"robo-card tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n            <img src={`https://robohash.org/${id}?size=200x200`} alt=\"Robot profile\"/>\n            <div>\n                <h2 className=\"\">{name}</h2>\n                <p className=\"\">{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n    const cardComponent = robots.map((user, i) => {\n        return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\n    })\n    return (\n        <div>\n            {cardComponent}\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n    return (\n        <div className='pa2'>\n            <input className='pa3 ba b--green bg-lightest-blue'\n            type='search'\n            placeholder='Search robots'\n            onChange={searchChange}/>\n        </div>\n    );\n}\n\nexport default SearchBox;","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError: true})\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>There is an error</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary;\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox'\nimport './App.css';\nimport { setSearchField, requestRobots } from '../actions';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nconst mapStateToProps = state => {\n    return {\n        searchField: state.searchRobots.searchField,\n        robots: state.requestRobots.robots,\n        isPending: state.requestRobots.isPending,\n        error: state.requestRobots.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n        onRequestRobots: () => dispatch(requestRobots())\n    }\n}\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.onRequestRobots()\n    }\n\n    render () {\n        const { searchField, onSearchChange, robots, isPending } = this.props;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\n        })\n        return isPending?\n            <h1>Loading...</h1> :\n        (\n                <div className='tc'>\n                    <div className='header-fix'>\n                        <h1 className='f1'>Robofriends</h1>\n                        <SearchBox searchChange={onSearchChange}/>\n                    </div>\n                        <ErrorBoundary>\n                            <CardList robots={filteredRobots}/>\n                        </ErrorBoundary>\n                </div>\n            );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED\n } from \"./constants\"\n\nexport const setSearchField = (text) => ({\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n})\n\nexport const requestRobots = () => (dispatch) => {\n    dispatch({type: REQUEST_ROBOTS_PENDING});\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n        .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING'\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS'\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED'","import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED\n } from \"./constants\"\n\nconst initialStateSearch = {\n    searchField: ''\n}\n\nexport const searchRobots = (state=initialStateSearch, action={}) => {\n    switch(action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return Object.assign({}, state, {searchField:action.payload} );\n        default:\n            return state;\n    }\n}\n\nconst initialStateRobots = {\n    isPending: false,\n    robots: [],\n    error: ''\n}\n\nexport const requestRobots = (state=initialStateRobots, action={}) => {\n    switch(action.type) {\n        case REQUEST_ROBOTS_PENDING:\n            return Object.assign({}, state, { isPending: true })\n        case REQUEST_ROBOTS_SUCCESS:\n            return Object.assign({}, state, {robots: action.payload, isPending: false })\n        case REQUEST_ROBOTS_FAILED:\n            return Object.assign({}, state, {error: action.payload, isPending: false })\n        default:\n            return state;\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport { searchRobots, requestRobots } from './reducers';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({searchRobots, requestRobots})\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger))\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}